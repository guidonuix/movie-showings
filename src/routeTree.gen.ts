/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WaitersloginRouteImport } from './routes/waiterslogin'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as PickOrdersRouteImport } from './routes/pick-orders'
import { Route as PickAreaRouteImport } from './routes/pick-area'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PickSeatsShowingIdRouteImport } from './routes/pick-seats/$showingId'
import { Route as OrderDetailOrderIdRouteImport } from './routes/order-detail/$orderId'
import { Route as MovieMovieIdRouteImport } from './routes/movie/$movieId'

const WaitersloginRoute = WaitersloginRouteImport.update({
  id: '/waiterslogin',
  path: '/waiterslogin',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const PickOrdersRoute = PickOrdersRouteImport.update({
  id: '/pick-orders',
  path: '/pick-orders',
  getParentRoute: () => rootRouteImport,
} as any)
const PickAreaRoute = PickAreaRouteImport.update({
  id: '/pick-area',
  path: '/pick-area',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PickSeatsShowingIdRoute = PickSeatsShowingIdRouteImport.update({
  id: '/pick-seats/$showingId',
  path: '/pick-seats/$showingId',
  getParentRoute: () => rootRouteImport,
} as any)
const OrderDetailOrderIdRoute = OrderDetailOrderIdRouteImport.update({
  id: '/order-detail/$orderId',
  path: '/order-detail/$orderId',
  getParentRoute: () => rootRouteImport,
} as any)
const MovieMovieIdRoute = MovieMovieIdRouteImport.update({
  id: '/movie/$movieId',
  path: '/movie/$movieId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/pick-area': typeof PickAreaRoute
  '/pick-orders': typeof PickOrdersRoute
  '/register': typeof RegisterRoute
  '/waiterslogin': typeof WaitersloginRoute
  '/movie/$movieId': typeof MovieMovieIdRoute
  '/order-detail/$orderId': typeof OrderDetailOrderIdRoute
  '/pick-seats/$showingId': typeof PickSeatsShowingIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/pick-area': typeof PickAreaRoute
  '/pick-orders': typeof PickOrdersRoute
  '/register': typeof RegisterRoute
  '/waiterslogin': typeof WaitersloginRoute
  '/movie/$movieId': typeof MovieMovieIdRoute
  '/order-detail/$orderId': typeof OrderDetailOrderIdRoute
  '/pick-seats/$showingId': typeof PickSeatsShowingIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/pick-area': typeof PickAreaRoute
  '/pick-orders': typeof PickOrdersRoute
  '/register': typeof RegisterRoute
  '/waiterslogin': typeof WaitersloginRoute
  '/movie/$movieId': typeof MovieMovieIdRoute
  '/order-detail/$orderId': typeof OrderDetailOrderIdRoute
  '/pick-seats/$showingId': typeof PickSeatsShowingIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/pick-area'
    | '/pick-orders'
    | '/register'
    | '/waiterslogin'
    | '/movie/$movieId'
    | '/order-detail/$orderId'
    | '/pick-seats/$showingId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/pick-area'
    | '/pick-orders'
    | '/register'
    | '/waiterslogin'
    | '/movie/$movieId'
    | '/order-detail/$orderId'
    | '/pick-seats/$showingId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/pick-area'
    | '/pick-orders'
    | '/register'
    | '/waiterslogin'
    | '/movie/$movieId'
    | '/order-detail/$orderId'
    | '/pick-seats/$showingId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  PickAreaRoute: typeof PickAreaRoute
  PickOrdersRoute: typeof PickOrdersRoute
  RegisterRoute: typeof RegisterRoute
  WaitersloginRoute: typeof WaitersloginRoute
  MovieMovieIdRoute: typeof MovieMovieIdRoute
  OrderDetailOrderIdRoute: typeof OrderDetailOrderIdRoute
  PickSeatsShowingIdRoute: typeof PickSeatsShowingIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/waiterslogin': {
      id: '/waiterslogin'
      path: '/waiterslogin'
      fullPath: '/waiterslogin'
      preLoaderRoute: typeof WaitersloginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pick-orders': {
      id: '/pick-orders'
      path: '/pick-orders'
      fullPath: '/pick-orders'
      preLoaderRoute: typeof PickOrdersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pick-area': {
      id: '/pick-area'
      path: '/pick-area'
      fullPath: '/pick-area'
      preLoaderRoute: typeof PickAreaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pick-seats/$showingId': {
      id: '/pick-seats/$showingId'
      path: '/pick-seats/$showingId'
      fullPath: '/pick-seats/$showingId'
      preLoaderRoute: typeof PickSeatsShowingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/order-detail/$orderId': {
      id: '/order-detail/$orderId'
      path: '/order-detail/$orderId'
      fullPath: '/order-detail/$orderId'
      preLoaderRoute: typeof OrderDetailOrderIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movie/$movieId': {
      id: '/movie/$movieId'
      path: '/movie/$movieId'
      fullPath: '/movie/$movieId'
      preLoaderRoute: typeof MovieMovieIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  PickAreaRoute: PickAreaRoute,
  PickOrdersRoute: PickOrdersRoute,
  RegisterRoute: RegisterRoute,
  WaitersloginRoute: WaitersloginRoute,
  MovieMovieIdRoute: MovieMovieIdRoute,
  OrderDetailOrderIdRoute: OrderDetailOrderIdRoute,
  PickSeatsShowingIdRoute: PickSeatsShowingIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
